swagger: '2.0'
info:
  title: Elza
  description: ElzaAPI
  version: "9.0.0"
# the domain of the service
host: localhost:8080
schemes:
  - http
# will be prefixed to all paths
basePath: /api/
produces:
  - application/json
consumes:
  - application/json
paths:
  /party:
    get:
      summary: Find party by params
      parameters:
        - name: search
          in: query
          description: ID
          required: false
          type: string
        - name: from
          in: query
          description: Offset of results
          required: true
          type: integer
        - name: count
          in: query
          description: Count of results
          required: true
          type: integer
        - name: partyTypeId
          in: query
          description: Party type ID
          required: false
          type: integer
        - name: versionId
          in: query
          description: version ID
          required: false
          type: integer
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            type: object
            properties:
              count:
                type: integer
              rows:
                type: array
                items:
                  $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Get party by ID
      parameters:
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParPartyVO'
      tags:
        - Party
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/{partyId}:
    get:
      summary: Get party by ID
      parameters:
        - name: partyId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update party by ID
      parameters:
        - name: partyId
          in: path
          description: ID
          required: true
          type: integer
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParPartyVO'
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete party by ID
      parameters:
        - name: partyId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Party
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/relations:
    post:
      summary: Create
      parameters:
        - name: relation
          in: body
          description: Relation
          required: true
          schema:
            $ref: '#/definitions/ParRelationVO'
      tags:
        - Party
        - Relation
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ParRelationVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/relations/{relationId}:
    put:
      summary: Update relation by ID
      parameters:
        - name: relationId
          in: path
          description: ID
          required: true
          type: integer
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParRelationVO'
      tags:
        - Party
        - Relation
      responses:
        200:
          description: Party
          schema:
            $ref: '#/definitions/ParRelationVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete relation by ID
      parameters:
        - name: relationId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Party
        - Relation
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/partyTypes:
    get:
      summary: Get party types
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            type: array
            items:
              $ref: '#/definitions/ParPartyTypeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/partyNameFormTypes:
    get:
      summary: Get party name form types
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            type: array
            items:
              $ref: '#/definitions/ParPartyNameFormTypeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/institutions:
    get:
      summary: Get institutions
      tags:
        - Party
      responses:
        200:
          description: Institutions
          schema:
            type: array
            items:
                $ref: '#/definitions/ParInstitutionVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  ParInstitutionVO:
    type: object
  ParRelationVO:
    type: object
  ParPartyNameFormTypeVO:
    type: object
  ParPartyTypeVO:
    type: object
    properties:
      partyTypeId:
        type: integer
      code:
        type: string
      name:
        type: string
      description:
        type: string
  ParPartyVO:
    type: object
    properties:
      partyId:
        type: integer
      partyType:
        $ref: '#/definitions/ParPartyTypeVO'
      history:
        type: string
      sourceInformation:
        type: string
      relations:
        type: string
      partyNames:
        type: string
      creators:
        type: array
        items:
          type: object
      record:
        $ref: '#/definitions/ParPartyTypeVO'
      characteristics:
        type: string
      version:
        type: integer
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
