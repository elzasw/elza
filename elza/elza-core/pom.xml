<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>elza</artifactId>
        <groupId>cz.tacr.elza</groupId>
        <version>2.6.0-SNAPSHOT</version>
    </parent>
    <artifactId>elza-core</artifactId>
    <name>ELZA Core</name>

    <properties>
        <drools.version>7.74.1.Final</drools.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>cz.tacr.elza</groupId>
            <artifactId>elza-ws-api</artifactId>
            <version>${project.parent.version}</version>
		</dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <!--<version>3.5.5</version>-->
		</dependency>		
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-resource-server</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-core</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- JWT decoding library (org.springframework.security.oauth2.jwt.NimbusJwtDecoder) -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-messaging</artifactId>
		</dependency>
		
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- 
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-spatial</artifactId>
		</dependency>

		<!-- Hibernate Search -->
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-mapper-orm</artifactId>
			<version>${hibernate.search.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-backend-lucene</artifactId>
            <version>${hibernate.search.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
		</dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
			<!-- Drivejsi poznamka: Verze se uvadi povinne z duvodu reseni konfliktu s jinymi komponentami,
                 bez jejiho uvedeni se vytvari WAR bez CXF 3.9 -->            
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
		</dependency>
		<!-- CXF -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-spring-boot-starter-jaxws</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
		</dependency>
		<!-- Drools -->
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-core</artifactId>
            <version>${drools.version}</version>
		</dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-compiler</artifactId>
            <version>${drools.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
		</dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
		</dependency>
        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
		</dependency>		
		<dependency>
			<groupId>com.fasterxml.woodstox</groupId>
			<artifactId>woodstox-core</artifactId>
			<!--<version>6.5.1</version>-->
		</dependency>
		<!-- Pridano kvuli tride com.sun.xml.txw2.output.IndentingXMLStreamWriter v exportu
             Asi lepe zvazit jeji nahradu vlastni impl a odstraneni dependency -->
        <dependency>
	        <groupId>org.glassfish.jaxb</groupId>
        	<artifactId>txw2</artifactId>        	
		</dependency>
		<!-- io.swagger.annotations.* -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
		</dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
		</dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
		</dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
		</dependency>
		<!-- TODO: remove this dependency -->
        <dependency>
            <groupId>ma.glasnost.orika</groupId>
            <artifactId>orika-core</artifactId>
            <version>1.5.4</version>
		</dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
		</dependency>
		<!-- Geotools -->
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax</groupId>
                    <artifactId>javaee-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>org.geotools.xsd</groupId>
            <artifactId>gt-xsd-core</artifactId>
		</dependency>
        <dependency>
            <groupId>org.geotools.xsd</groupId>
            <artifactId>gt-xsd-kml</artifactId>
		</dependency>		
		<!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
		</dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
		</dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
		</dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
		</dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
		</dependency>
		<!-- Find bugs -->
		<!--<dependency>-->
		<!--<groupId>com.google.code.findbugs</groupId>-->
		<!--<artifactId>jsr305</artifactId>-->
		<!--</dependency>-->
		<!-- END - Find bugs -->

		<!-- Dependency for javax - proper JDOC generation -->
    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.yaml</include>
				</includes>
			</resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.yaml</exclude>
				</excludes>
			</resource>
		</resources>
        <testResources>
			<!-- Copy default test resources -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.yaml</include>
				</includes>
			</testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.yaml</exclude>
				</excludes>
			</testResource>
			<!-- Add test folder with source files for packages -->
            <testResource>
                <directory>${basedir}/target/test-resources</directory>
                <includes />
			</testResource>
            <testResource>
                <directory>${project.basedir}/../package-cz-base/src</directory>
                <targetPath>${project.basedir}/target/test-classes/package-cz-base</targetPath>
			</testResource>
            <testResource>
                <directory>${project.basedir}/../rules-simple-dev/src</directory>
                <targetPath>${project.basedir}/target/test-classes/rules-simple-dev</targetPath>
			</testResource>
		</testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <!--<version>3.3.0</version>-->
                <executions>
                    <execution>
                        <id>add-gen-sources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-source</goal>
						</goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/jaxb</source>
                                <source>${project.build.directory}/generated-sources/cam</source>
								<!-- <source>${project.build.directory}/generated-sources/api/rest</source> -->
							</sources>
						</configuration>
					</execution>
                    <execution>
                        <id>add-gen-test-sources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-test-source</goal>
						</goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-test-sources/api/rest/src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.jvnet.jaxb</groupId>
                <artifactId>jaxb-maven-plugin</artifactId>
                <version>4.0.0</version>
                <executions>
                    <execution>
                        <id>generate-elza-schema</id>
                        <goals>
                            <goal>generate</goal>
						</goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <extension>true</extension>
                            <args>
                                <arg>-Xinheritance</arg>
							</args>
                            <generateDirectory>${project.build.directory}/generated-sources/jaxb</generateDirectory>
                            <schemaDirectory>${project.basedir}/src/main/resources/schema</schemaDirectory>
                            <schemaIncludes>
                                <include>elza-schema-v2.xsd</include>
							</schemaIncludes>
                            <bindingDirectory>${project.basedir}/src/main/resources/schema</bindingDirectory>
                            <bindingIncludes>
                                <include>elza-schema-v2-bindinds.xml</include>
							</bindingIncludes>
                            <plugins>
                                <plugin>
                                    <groupId>org.jvnet.jaxb</groupId>
                                    <artifactId>jaxb-plugins</artifactId>
                                    <version>4.0.0</version>
								</plugin>
							</plugins>
						</configuration>
					</execution>
                    <execution>
                        <id>generate-cam-schema</id>
                        <goals>
                            <goal>generate</goal>
						</goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <extension>true</extension>
                            <args>
                                <arg>-Xannotate</arg>
                                <arg>-Xinheritance</arg>
                                <arg>-Xvalue-constructor</arg>
							</args>
                            <generateDirectory>${project.build.directory}/generated-sources/cam</generateDirectory>
                            <schemaDirectory>${project.basedir}/src/main/resources/cam</schemaDirectory>
                            <schemaIncludes>
                                <include>cam-2019.xsd</include>
							</schemaIncludes>
                            <bindingDirectory>${project.basedir}/src/main/resources/cam</bindingDirectory>
                            <bindingIncludes>
                                <include>cam-2019.xjb</include>
							</bindingIncludes>
                            <plugins>
                                <plugin>
                                    <groupId>org.jvnet.jaxb</groupId>
                                    <artifactId>jaxb-plugins</artifactId>
                                    <version>4.0.0</version>
								</plugin>
							</plugins>
						</configuration>
					</execution>
				</executions>
                <dependencies>
                    <!--<dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-xjc</artifactId>
                        <version>2.3.2</version>
					</dependency>
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                        <version>2.3.2</version>
					</dependency>-->
                    <dependency>
                        <groupId>io.swagger.core.v3</groupId>
                        <artifactId>swagger-annotations</artifactId>
                        <version>2.2.19</version>
					</dependency>
                    <dependency>
                        <groupId>org.jvnet.jaxb</groupId>
                        <artifactId>jaxb-plugins</artifactId>
                        <version>4.0.0</version>
					</dependency>
                    <dependency>
                        <groupId>org.jvnet.jaxb</groupId>
                        <artifactId>jaxb-plugin-annotate</artifactId>
                        <version>4.0.0</version>
					</dependency>
					<!--
                    <dependency>
                        <groupId>org.jvnet.jaxb2_commons</groupId>
                        <artifactId>jaxb2-value-constructor</artifactId>
                        <version>3.0</version>
					</dependency>-->
				</dependencies>
			</plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapiGenerator.version}</version>
                <executions>
                    <execution>
                        <id>openapi-spring</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
						</goals>
                        <configuration>
                            <generatorName>spring</generatorName>
                            <inputSpec>${project.basedir}/src/main/resources/rest/elza-openapi.yml</inputSpec>
                            <output>${project.build.directory}/generated-sources/api/rest</output>
                            <apiPackage>cz.tacr.elza.controller</apiPackage>
                            <modelPackage>cz.tacr.elza.controller.vo</modelPackage>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApiTests>false</generateApiTests>
							<!--<supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>-->
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
								<!--<sourceFolder>/</sourceFolder>-->
                                <interfaceOnly>true</interfaceOnly>
								<!--  disables default interface methods for testing  -->
                                <useTags>true</useTags>
							</configOptions>
						</configuration>
					</execution>
                    <execution>
                        <id>openapi-spring-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
						</goals>
                        <configuration>
                            <generatorName>java</generatorName>
                            <inputSpec>${project.basedir}/src/main/resources/cam/cam-openapi.yml</inputSpec>
                            <output>${project.build.directory}/generated-sources/api/cam/rest-client</output>
                            <apiPackage>cz.tacr.cam.client.controller</apiPackage>
                            <modelPackage>cz.tacr.cam.client.controller.vo</modelPackage>
                            <generateApiTests>false</generateApiTests>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                            </configOptions>
							<!--<configOptions>
                                <library>resttemplate</library>
                            </configOptions>-->
						</configuration>
					</execution>
                    <execution>
                        <id>openapi-test-client</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generate</goal>
						</goals>
                        <configuration>
                            <generatorName>java</generatorName>
                            <inputSpec>${project.basedir}/src/main/resources/rest/elza-openapi.yml</inputSpec>
                            <output>${project.build.directory}/generated-test-sources/api/rest</output>
                            <apiPackage>cz.tacr.elza.test.controller</apiPackage>
                            <modelPackage>cz.tacr.elza.test.controller.vo</modelPackage>
                            <generateApiTests>false</generateApiTests>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                            </configOptions>                            
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--  TODO pasek hack - cxf-codegen-plugin momentálně neumí generovat třídy s jakarta ee9, nutno ručně přepsat importy -->
            <!--
            <plugin> 
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>replace-for-jakarta</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <filesToInclude>target/generated-sources/**/*.java</filesToInclude>
                            <preserveDir>true</preserveDir>
                            <replacements>
                                <replacement>
                                    <token>javax.xml.bind</token>
                                    <value>jakarta.xml.bind</value>
                                </replacement>
                                <replacement>
                                    <token>javax.xml.ws</token>
                                    <value>jakarta.xml.ws</value>
                                </replacement>
                                <replacement>
                                    <token>javax.jws</token>
                                    <value>jakarta.jws</value>
                                </replacement>
                                <replacement>
                                    <token>javax.servlet</token>
                                    <value>jakarta.servlet</value>
                                </replacement>
                                <replacement>
                                    <token>javax.validation</token>
                                    <value>jakarta.validation</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>test-pgsql</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <properties>
                                <spring.profiles.active>pgsql</spring.profiles.active>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
        <profile>
            <id>dist</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
								</goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>cz.tacr.elza.ElzaCore</mainClass>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <useUniqueVersions>false</useUniqueVersions>
								</manifest>
							</archive>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
        <profile>
            <id>jacoco-report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <excludes>org.drools.compiler.lang.*</excludes>
						</configuration>
                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
