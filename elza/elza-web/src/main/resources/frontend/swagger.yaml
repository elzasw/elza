swagger: '2.0'
info:
  title: Elza
  description: ElzaAPI
  version: "9.0.0"
# the domain of the service
host: localhost:8080
schemes:
  - http
# will be prefixed to all paths
basePath: /api/
produces:
  - application/json
consumes:
  - application/json
paths:
  /party:
    get:
      summary: Find party by params
      parameters:
        - name: search
          in: query
          description: ID
          required: false
          type: string
        - name: from
          in: query
          description: Offset of results
          required: true
          type: integer
        - name: count
          in: query
          description: Count of results
          required: true
          type: integer
        - name: partyTypeId
          in: query
          description: Party type ID
          required: false
          type: integer
        - name: versionId
          in: query
          description: version ID
          required: false
          type: integer
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            type: object
            properties:
              count:
                type: integer
              rows:
                type: array
                items:
                  $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Get party by ID
      parameters:
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParPartyVO'
      tags:
        - Party
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/{partyId}:
    get:
      summary: Get party by ID
      parameters:
        - name: partyId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update party by ID
      parameters:
        - name: partyId
          in: path
          description: ID
          required: true
          type: integer
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParPartyVO'
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete party by ID
      parameters:
        - name: partyId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Party
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/relation:
    post:
      summary: Create
      parameters:
        - name: relation
          in: body
          description: Relation
          required: true
          schema:
            $ref: '#/definitions/ParRelationVO'
      tags:
        - Party
        - Relation
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ParRelationVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/relation/{relationId}:
    put:
      summary: Update relation by ID
      parameters:
        - name: relationId
          in: path
          description: ID
          required: true
          type: integer
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParRelationVO'
      tags:
        - Party
        - Relation
      responses:
        200:
          description: Party
          schema:
            $ref: '#/definitions/ParRelationVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete relation by ID
      parameters:
        - name: relationId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Party
        - Relation
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/partyTypes:
    get:
      summary: Get party types
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            type: array
            items:
              $ref: '#/definitions/ParPartyTypeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/partyNameFormTypes:
    get:
      summary: Get party name form types
      tags:
        - Party
      responses:
        200:
          description: Party
          schema:
            type: array
            items:
              $ref: '#/definitions/ParPartyNameFormTypeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /party/institutions:
    get:
      summary: Get institutions
      tags:
        - Party
      responses:
        200:
          description: Institutions
          schema:
            type: array
            items:
                $ref: '#/definitions/ParInstitutionVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry:
    get:
      summary: Find registry by params
      parameters:
        - name: search
          in: query
          description: ID
          required: false
          type: string
        - name: from
          in: query
          description: Offset of results
          required: true
          type: integer
        - name: count
          in: query
          description: Count of results
          required: true
          type: integer
        - name: apTypeId
          in: query
          description: register type ID
          required: false
          type: integer
        - name: parentRecordId
          in: query
          description: Parent record id
          required: false
          type: integer
        - name: versionId
          in: query
          description: version ID
          required: false
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Registry
          schema:
            type: object
            properties:
              count:
                type: integer
              rows:
                type: array
                items:
                  $ref: '#/definitions/ApRecordSimple'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Get party by ID
      parameters:
        - name: party
          in: body
          description: Party
          required: true
          schema:
            $ref: '#/definitions/ParPartyVO'
      tags:
        - Party
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ParPartyVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/{recordId}:
    get:
      summary: Get record by ID
      parameters:
        - name: recordId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Record
          schema:
            $ref: '#/definitions/ApRecordVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update record by ID
      parameters:
        - name: recordId
          in: path
          description: ID
          required: true
          type: integer
        - name: record
          in: body
          description: Record
          required: true
          schema:
            $ref: '#/definitions/ApRecordVO'
      tags:
        - Registry
      responses:
        200:
          description: Record
          schema:
            $ref: '#/definitions/ApRecordVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete record by ID
      parameters:
        - name: recordId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/findRecordForRelation:
    get:
      summary: Find registry by params for relation
      parameters:
        - name: search
          in: query
          description: ID
          required: false
          type: string
        - name: from
          in: query
          description: Offset of results
          required: true
          type: integer
        - name: count
          in: query
          description: Count of results
          required: true
          type: integer
        - name: roleTypeId
          in: query
          description: role type ID
          required: true
          type: integer
        - name: partyId
          in: query
          description: Party ID
          required: true
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Registry
          schema:
            type: object
            properties:
              count:
                type: integer
              rows:
                type: array
                items:
                  $ref: '#/definitions/ApRecordSimple'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /scopes:
    get:
      summary: get all scopes
      tags:
        - Registry
      responses:
        200:
          description: Scopes
          schema:
            type: array
            items:
              $ref: '#/definitions/ApScopeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create scope
      parameters:
        - name: scope
          in: body
          description: Scope
          required: true
          schema:
            $ref: '#/definitions/ApScopeVO'
      tags:
        - Party
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ApScopeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /scopes/{scopeId}:
    put:
      summary: Update scope by ID
      parameters:
        - name: scopeId
          in: path
          description: ID
          required: true
          type: integer
        - name: record
          in: body
          description: Scope
          required: true
          schema:
            $ref: '#/definitions/ApScopeVO'
      tags:
        - Registry
      responses:
        200:
          description: Scope
          schema:
            $ref: '#/definitions/ApScopeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete scope by ID
      parameters:
        - name: scopeId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /fundScopes:
    get:
      summary: get scopes for fund version or from yaml
      parameters:
        - name: versionId
          in: query
          description: version Id
          required: false
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Scopes
          schema:
            type: array
            items:
              $ref: '#/definitions/ApScopeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/recordTypes:
    get:
      summary: Record Types
      tags:
        - Registry
      responses:
        200:
          description: Record
          schema:
            type: array
            items:
              $ref: '#/definitions/ApTypeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/recordTypesForPartyType:
    get:
      summary: Record Types for party types
      tags:
        - Registry
      parameters:
        - name: partyTypeId
          in: query
          description: ID
          required: false
          type: integer
      responses:
        200:
          description: Record
          schema:
            type: array
            items:
              $ref: '#/definitions/ApTypeVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/variantRecord:
    post:
      summary: Create Variant record
      parameters:
        - name: variant record
          in: body
          description: Variant record
          required: true
          schema:
            $ref: '#/definitions/ApVariantRecordVO'
      tags:
        - Registry
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/ApVariantRecordVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/variantRecord/{variantRecordId}:
    put:
      summary: Update variant record by ID
      parameters:
        - name: variantRecordId
          in: path
          description: ID
          required: true
          type: integer
        - name: variantRecord
          in: body
          description: Record
          required: true
          schema:
            $ref: '#/definitions/ApVariantRecordVO'
      tags:
        - Registry
      responses:
        200:
          description: Record
          schema:
            $ref: '#/definitions/ApVariantRecordVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete variant record by ID
      parameters:
        - name: variantRecordId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/regCoordinates:
    post:
      summary: Create coordinates
      parameters:
        - name: variant record
          in: body
          description: coordinates
          required: true
          schema:
            $ref: '#/definitions/RegCoordinatesVO'
      tags:
        - Registry
      responses:
        200:
          description: Created object
          schema:
            $ref: '#/definitions/RegCoordinatesVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/regCoordinates/{coordinatesId}:
    put:
      summary: Update coordinates by ID
      parameters:
        - name: coordinatesId
          in: path
          description: ID
          required: true
          type: integer
        - name: coordinates
          in: body
          description: coordinates
          required: true
          schema:
            $ref: '#/definitions/RegCoordinatesVO'
      tags:
        - Registry
      responses:
        200:
          description: Coordinates
          schema:
            $ref: '#/definitions/RegCoordinatesVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete coordinates by ID
      parameters:
        - name: coordinatesId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Registry
      responses:
        200:
          description: Successful delete
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/specificationHasParty/{itemSpecId}:
    get:
      summary: Tell you if specification contains also party
      parameters:
        - name: itemSpecId
          in: path
          description: ID
          required: true
          type: integer
      tags:
        - Registry
        - Specification
        - Party
      responses:
        200:
          description: "Response true if specification contains party"
          schema:
            type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/externalSystems:
    post:
      summary: Return list of registry external systems
      tags:
        - Registry
      responses:
        200:
          description: registry external systems list
          schema:
            type: array
            items:
              $ref: '#/definitions/ApExternalSystemVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/interpi:
    post:
      summary: Search record in external system
      parameters:
        - name: interpiSearchVO
          in: body
          description: search criteria for external system
          required: true
          schema:
            $ref: '#/definitions/InterpiSearchVO'
      tags:
        - Registry
      responses:
        200:
          description: Found records
          schema:
            type: array
            items:
              $ref: '#/definitions/ExternalRecordVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/interpi/import:
    post:
      summary: Import record from external system
      parameters:
        - name: recordImportVO
          in: body
          description: import configuration
          required: true
          schema:
            $ref: '#/definitions/RecordImportVO'
      tags:
        - Registry
      responses:
        200:
          description: Imported record
          schema:
            $ref: '#/definitions/ApRecordVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registry/interpi/{interpiRecordId}/relations:
    post:
      summary: Find interpi relation mapping for interpi record
      parameters:
        - name: interpiRecordId
          in: path
          description: interpi record id
          required: true
          type: integer
        - name: relationSearchVO
          in: body
          description: search criteria for external system
          required: true
          schema:
            $ref: '#/definitions/RelationSearchVO'
      tags:
        - Registry
      responses:
        200:
          description: Found records
          schema:
            $ref: '#/definitions/InterpiMappingVO'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  ParInstitutionVO:
    type: object
  ParRelationVO:
    type: object
  ParPartyNameFormTypeVO:
    type: object
  ParPartyTypeVO:
    type: object
    properties:
      id:
        type: integer
      code:
        type: string
      name:
        type: string
      description:
        type: string
  ParPartyVO:
    type: object
    properties:
      id:
        type: integer
      partyType:
        $ref: '#/definitions/ParPartyTypeVO'
      history:
        type: string
      sourceInformation:
        type: string
      relations:
        type: string
      partyNames:
        type: string
      creators:
        type: array
        items:
          type: object
      record:
        $ref: '#/definitions/ParPartyTypeVO'
      characteristics:
        type: string
      version:
        type: integer
  ApVariantRecordVO:
    type: object
  ApRecordSimple:
    type: object
  ApRecordVO:
    type: object
  ApCoordinatesVO:
    type: object
  ApRegisterTypeVO:
    type: object
  InterpiSearchVO:
    type: object
  ExternalRecordVO:
    type: object
  RelationSearchVO:
    type: object
  InterpiMappingVO:
    type: object
  ApScopeVO:
    type: object
  RecordImportVO:
    type: object
  ApExternalSystemVO:
    type: object
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
