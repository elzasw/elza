package ZP2015;

import java.util.Arrays;
import cz.tacr.elza.drools.model.Level
import cz.tacr.elza.drools.model.ActiveLevel
import cz.tacr.elza.drools.model.DescItem;
import cz.tacr.elza.drools.model.Structured;
import cz.tacr.elza.drools.model.StructObjItem;
import cz.tacr.elza.domain.vo.DataValidationResult;
import cz.tacr.elza.domain.vo.DataValidationResults;

global DataValidationResults results;

rule "UJ_012 Větev archivního popisu obsahující pouze logické složky musí obsahovat ukládací jednotku"
when
	$activeLevel: ActiveLevel( !hasChildren )
	DescItem(type=="ZP2015_LEVEL_TYPE" && specCode in ("ZP2015_LEVEL_FOLDER") ) from $activeLevel.ownDescItems
	DescItem(type=="ZP2015_FOLDER_TYPE" && specCode in ("ZP2015_FOLDER_LOGICAL") ) from $activeLevel.ownDescItems
	not ( 
		$level: Level( ) and 
		DescItem(type=="ZP2015_FOLDER_TYPE" && specCode not in ("ZP2015_FOLDER_LOGICAL") ) from $level.ownDescItems
	)
	// není zneplatněný záznam
    not DescItem(type=="ZP2015_INVALID_RECORD") from $activeLevel.descItems
    // neni pevne spojeni
    not DescItem(type=="ZP2015_ITEM_LINK") from $activeLevel.descItems
    // neni ulozeno v DA
    not DescItem(type=="ZP2015_AIP_ID") from $activeLevel.descItems
	// chybi UJ
	not DescItem(type=="ZP2015_STORAGE_ID") from $activeLevel.descItems
then
	results.createMissing("ZP2015_STORAGE_ID", "Chybí ukládací jednotka (pravidlo UJ_012)", "ZP2015_POL_STORAGE_ID");
end


rule "HP_015 Větev archivního popisu zakončená složkou má složku s EJ"
when
	$activeLevel: ActiveLevel( !hasChildren )
	DescItem(type=="ZP2015_LEVEL_TYPE" && specCode in ("ZP2015_LEVEL_FOLDER") ) from $activeLevel.ownDescItems	
    // není zneplatněný záznam
    not DescItem(type=="ZP2015_INVALID_RECORD") from $activeLevel.descItems
    // neni pevne spojeni
    not DescItem(type=="ZP2015_ITEM_LINK") from $activeLevel.descItems
    // není složka s dodatečnými EJ (obyvkle složka manip.seznamu)
    not DescItem(type=="ZP2015_EXTRA_UNITS" ) from $activeLevel.descItems	
    // neexistuje slozka daneho typu
	not (
	  Level( $items: descItems ) and 
	  DescItem(type=="ZP2015_FOLDER_TYPE" && 
	           specCode in ("ZP2015_FOLDER_UNITS", "ZP2015_FOLDER_SINGLE_TYPE", "ZP2015_FOLDER_DAO")) from $items
	)
then
	results.createMissing("ZP2015_FOLDER_TYPE", "Chybí složka určující evidenční jednotku (pravidlo HP_015)", "ZP2015_POL_BASIC");
end


rule "List musí mít strojovou dataci směrem ke kořeni"
when
	$activeLevel: ActiveLevel( !hasChildren && $items: descItems )
	DescItem(type=="ZP2015_LEVEL_TYPE" && specCode in ("ZP2015_LEVEL_FOLDER", "ZP2015_LEVEL_ITEM", "ZP2015_LEVEL_PART") ) from $items
	not ( DescItem(type in ( "ZP2015_UNIT_DATE" ) ) from $items )
then
	results.createMissing("ZP2015_UNIT_DATE", "Není uvedena datace", "ZP2015_POL_BASIC");
end

rule "Nadřazená datace zahrnuje dataci úrovně"
when
	$activeLevel: ActiveLevel( $ownItems: ownDescItems && parent!=null && $parent: parent )
	$datace: DescItem(type in ("ZP2015_UNIT_DATE") ) from $ownItems
	Level( $parentItems: descItems ) from $parent 	
	DescItem( type in ("ZP2015_UNIT_DATE") 
	           && (normalizedFrom>$datace.normalizedFrom || normalizedTo<$datace.normalizedTo ) ) from $parentItems	
then
	results.createMissing("ZP2015_UNIT_DATE", "Datace není zahrnuta v časovém rozsahu vyšší úrovně", "ZP2015_POL_BASIC");
end

/*
// Kontrola, zda každá hromadina s EJ má uvedenu ukládací jednotku s druhem KAR,FAS,DAJ
rule "Každá hromadina s EJ má uvedenu ukládací jednotku"
when
	ActiveLevel( $items: descItems )
	DescItem(type=="ZP2015_FOLDER_TYPE" && (specCode in ("ZP2015_FOLDER_UNITS"))) from $items
	$descItem: DescItem(type=="ZP2015_STORAGE_ID" && structured != null && $struct: structured) from $items
	StructObjItem(type=="ZP2015_PACKET_TYPE" && specCode not in ("ZP2015_PACKET_TYPE_KAR", "ZP2015_PACKET_TYPE_FAS")) from $struct.items
then
	results.createMissing("ZP2015_STORAGE_ID", "Ukládací jednotka bez uvedení typu hromadiny", "ZP2015_POL_STORAGE_ID");
end
*/

// uplatni se jen pro pomucky dle ZP, neuplatní se pro kartotéku a složku manipulačního seznamu
rule "Počet archiválií musí být větší nebo roven 2"
when
	$activeLevel: ActiveLevel( $items: descItems )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $items	
	not DescItem(type=="ZP2015_UNIT_TYPE" && specCode in ("ZP2015_UNIT_TYPE_KTT") ) from $items
	not DescItem(type=="ZP2015_EXTRA_UNITS" ) from $items
    $descItem: DescItem(type=="ZP2015_UNIT_COUNT"  && integer.intValue()<2 ) from $items
then
	results.createError($descItem.getDescItemId(), "Počet archiválií musí být větší nebo roven 2", "ZP2015_POL_BASIC");
end

// uplatni se pro složku manipulační seznamu dle ZP
rule "Počet archiválií musí být větší nebo roven 1"
when
	$activeLevel: ActiveLevel( $items: descItems )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $items
	not DescItem(type=="ZP2015_UNIT_TYPE" && specCode in ("ZP2015_UNIT_TYPE_KTT") ) from $items
	DescItem(type=="ZP2015_EXTRA_UNITS" ) from $items
    $descItem: DescItem(type=="ZP2015_UNIT_COUNT"  && integer.intValue()<1 ) from $items
then
	results.createError($descItem.getDescItemId(), "Počet archiválií musí být větší nebo roven 1", "ZP2015_POL_BASIC");
end

// uplatni se pro KTT dle ZP
rule "Počet archiválií u KTT musí být větší nebo roven 1"
when
	$activeLevel: ActiveLevel( $items: descItems )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $items
	DescItem(type=="ZP2015_UNIT_TYPE" && specCode in ("ZP2015_UNIT_TYPE_KTT") ) from $items
    $descItem: DescItem(type=="ZP2015_UNIT_COUNT"  && integer.intValue()<1 ) from $items
then
	results.createError($descItem.getDescItemId(), "Počet archiválií u kartotéky musí být větší nebo roven 1", "ZP2015_POL_BASIC");
end

// Povinné pokud je nastaven typ pořádání
// výjimkou je kořen nebo hlavní série pokud mají nastaveno ref.označení
// Možné zlepšení: Kontrolovat, že žádný rodič nemá pořadové číslo, pokud ho nemá posuzovaná JP
rule "Pořadové číslo - povinné"
no-loop
when
	$activeLevel : ActiveLevel( $items: descItems )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $items
	not DescItem(type=="ZP2015_SERIAL_NUMBER" && !isInherited()) from $items
	// Výjimka pro nejvyšší série a kořen
	not (
	  DescItem(type=="ZP2015_UNIT_ID" && !isInherited() ) from $items
	  and DescItem(type=="ZP2015_LEVEL_TYPE" && specCode in ("ZP2015_LEVEL_ROOT", "ZP2015_LEVEL_SECTION", "ZP2015_LEVEL_SERIES") ) from $items
	)
then
	results.createMissing("ZP2015_SERIAL_NUMBER",
	"Pořadové číslo musí být nastaveno (případně ref. označení pro nejvyšší úrovně popisu)",
	"ZP2015_POL_SERIAL_NO");
end

// referenční označení v INV|KAT - povinné pro uzly mimo kořen
rule "Referenční označení - povinné"
no-loop
when
	$activeLevel: ActiveLevel( parent!=null )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $activeLevel.descItems
	not DescItem(type=="ZP2015_UNIT_ID" && !isInherited()) from $activeLevel.descItems
then
	results.createMissing("ZP2015_UNIT_ID", "Referenční označení musí byt přiřazeno", "ZP2015_POL_REF_NO");
end

// Kontrola, zda každý list má v hierarchii zdroj akvizice
rule "List musí mít zdroj akvizice směrem ke kořeni"
when
	$activeLevel: ActiveLevel( !hasChildren )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $activeLevel.descItems
	not ( $level: Level( $items: descItems ) and 
		DescItem(type in 
		  ( "ZP2015_UNIT_SOURCE" ) )
		  from $items )
then
	results.createMissing("ZP2015_UNIT_SOURCE", "Není uveden zdroj akvizice", "ZP2015_POL_BASIC");
end

// Kontrola, zda každý list má v hierarchii fyzický stav
rule "List musí mít popsán fyzický stav směrem ke kořeni"
when
	$activeLevel: ActiveLevel( !hasChildren )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $activeLevel.descItems
	not ( $level: Level( $items: descItems ) and 
		DescItem(type in 
		  ( "ZP2015_UNIT_CURRENT_STATUS" ) )
		  from $items )
then
	results.createMissing("ZP2015_UNIT_CURRENT_STATUS",
	"Není uveden fyzický stav jednotky popisu a technické požadavky", "ZP2015_POL_BASIC");
end

// Kontrola, zda každý list má zpracovatele
rule "List musí mít směrem ke kořeni alespoň jednoho zpracovatele"
when
	$activeLevel: ActiveLevel( !hasChildren )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $activeLevel.descItems
	not ( $level: Level( $items: descItems ) and 
		DescItem(type in 
		  ( "ZP2015_ARRANGER" ) )
		  from $items )
then
	results.createMissing("ZP2015_ARRANGER", "Není uveden zpracovatel", "ZP2015_POL_BASIC");
end

// Kontrola, zda každý list má určen jazyk
rule "List musí mít směrem ke kořeni alespoň jeden jazyk"
when
	$activeLevel: ActiveLevel( !hasChildren )
	DescItem(type=="ZP2015_ARRANGEMENT_TYPE" && specCode in ("ZP2015_ARRANGEMENT_MAN", "ZP2015_ARRANGEMENT_INV", "ZP2015_ARRANGEMENT_KAT") ) from $activeLevel.descItems
	not ( $level: Level( $items: descItems ) and 
		DescItem(type in 
		  ( "ZP2015_LANGUAGE" ) )
		  from $items )
then
	results.createMissing("ZP2015_LANGUAGE", "Není uveden jazyk", "ZP2015_POL_BASIC");
end
