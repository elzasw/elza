//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.24 at 04:42:06 PM CET 
//


package cz.tacr.elza.interpi.ws.wo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tridaTyp.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tridaTyp"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="osoba/bytost"/&gt;
 *     &lt;enumeration value="korporace"/&gt;
 *     &lt;enumeration value="rod/rodina"/&gt;
 *     &lt;enumeration value="dílo/výtvor"/&gt;
 *     &lt;enumeration value="geografický objekt"/&gt;
 *     &lt;enumeration value="událost"/&gt;
 *     &lt;enumeration value="obecný pojem"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "tridaTyp")
@XmlEnum
public enum TridaTyp {

    @XmlEnumValue("osoba/bytost")
    OSOBA_BYTOST("osoba/bytost"),
    @XmlEnumValue("korporace")
    KORPORACE("korporace"),
    @XmlEnumValue("rod/rodina")
    ROD_RODINA("rod/rodina"),
    @XmlEnumValue("d\u00edlo/v\u00fdtvor")
    DÍLO_VÝTVOR("d\u00edlo/v\u00fdtvor"),
    @XmlEnumValue("geografick\u00fd objekt")
    GEOGRAFICKÝ_OBJEKT("geografick\u00fd objekt"),
    @XmlEnumValue("ud\u00e1lost")
    UDÁLOST("ud\u00e1lost"),
    @XmlEnumValue("obecn\u00fd pojem")
    OBECNÝ_POJEM("obecn\u00fd pojem");
    private final String value;

    TridaTyp(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TridaTyp fromValue(String v) {
        for (TridaTyp c: TridaTyp.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
