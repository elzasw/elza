//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.24 at 04:42:06 PM CET 
//


package cz.tacr.elza.interpi.ws.wo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for identifikator_jinyTypA.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="identifikator_jinyTypA"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="muzejní autority"/&gt;
 *     &lt;enumeration value="národní autority"/&gt;
 *     &lt;enumeration value="IČO"/&gt;
 *     &lt;enumeration value="kód_cz"/&gt;
 *     &lt;enumeration value="ČSÚ"/&gt;
 *     &lt;enumeration value="SŠÚ"/&gt;
 *     &lt;enumeration value="VIAF"/&gt;
 *     &lt;enumeration value="ISNI"/&gt;
 *     &lt;enumeration value="systémové číslo"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "identifikator_jinyTypA")
@XmlEnum
public enum IdentifikatorJinyTypA {

    @XmlEnumValue("muzejn\u00ed autority")
    MUZEJNÍ_AUTORITY("muzejn\u00ed autority"),
    @XmlEnumValue("n\u00e1rodn\u00ed autority")
    NÁRODNÍ_AUTORITY("n\u00e1rodn\u00ed autority"),
    IČO("I\u010cO"),
    @XmlEnumValue("k\u00f3d_cz")
    KÓD_CZ("k\u00f3d_cz"),
    ČSÚ("\u010cS\u00da"),
    SŠÚ("S\u0160\u00da"),
    VIAF("VIAF"),
    ISNI("ISNI"),
    @XmlEnumValue("syst\u00e9mov\u00e9 \u010d\u00edslo")
    SYSTÉMOVÉ_ČÍSLO("syst\u00e9mov\u00e9 \u010d\u00edslo");
    private final String value;

    IdentifikatorJinyTypA(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IdentifikatorJinyTypA fromValue(String v) {
        for (IdentifikatorJinyTypA c: IdentifikatorJinyTypA.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
