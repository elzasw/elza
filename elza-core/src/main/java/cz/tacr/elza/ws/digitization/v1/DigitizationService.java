package cz.tacr.elza.ws.digitization.v1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-12-08T12:27:09.198+01:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "DigitizationService", 
                  wsdlLocation = "file:elza-digitization-service-v1.wsdl",
                  targetNamespace = "http://elza.tacr.cz/ws/digitization/v1") 
public class DigitizationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://elza.tacr.cz/ws/digitization/v1", "DigitizationService");
    public final static QName DigitizationService = new QName("http://elza.tacr.cz/ws/digitization/v1", "DigitizationService");
    static {
        URL url = null;
        try {
            url = new URL("file:elza-digitization-service-v1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DigitizationService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:elza-digitization-service-v1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DigitizationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DigitizationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DigitizationService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public DigitizationService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DigitizationService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DigitizationService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DigitizationFrontdesk
     */
    @WebEndpoint(name = "DigitizationService")
    public DigitizationFrontdesk getDigitizationService() {
        return super.getPort(DigitizationService, DigitizationFrontdesk.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DigitizationFrontdesk
     */
    @WebEndpoint(name = "DigitizationService")
    public DigitizationFrontdesk getDigitizationService(WebServiceFeature... features) {
        return super.getPort(DigitizationService, DigitizationFrontdesk.class, features);
    }

}
