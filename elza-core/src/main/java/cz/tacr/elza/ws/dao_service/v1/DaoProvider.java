package cz.tacr.elza.ws.dao_service.v1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-12-08T12:26:59.877+01:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "DaoProvider", 
                  wsdlLocation = "file:elza-dao-service-v1.wsdl",
                  targetNamespace = "http://elza.tacr.cz/ws/dao-service/v1") 
public class DaoProvider extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://elza.tacr.cz/ws/dao-service/v1", "DaoProvider");
    public final static QName DaoNotifications = new QName("http://elza.tacr.cz/ws/dao-service/v1", "DaoNotifications");
    public final static QName DaoRequest = new QName("http://elza.tacr.cz/ws/dao-service/v1", "DaoRequest");
    static {
        URL url = null;
        try {
            url = new URL("file:elza-dao-service-v1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DaoProvider.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:elza-dao-service-v1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DaoProvider(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DaoProvider(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DaoProvider() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public DaoProvider(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DaoProvider(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DaoProvider(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DaoNotifications
     */
    @WebEndpoint(name = "DaoNotifications")
    public DaoNotifications getDaoNotifications() {
        return super.getPort(DaoNotifications, DaoNotifications.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DaoNotifications
     */
    @WebEndpoint(name = "DaoNotifications")
    public DaoNotifications getDaoNotifications(WebServiceFeature... features) {
        return super.getPort(DaoNotifications, DaoNotifications.class, features);
    }


    /**
     *
     * @return
     *     returns DaoRequests
     */
    @WebEndpoint(name = "DaoRequest")
    public DaoRequests getDaoRequest() {
        return super.getPort(DaoRequest, DaoRequests.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DaoRequests
     */
    @WebEndpoint(name = "DaoRequest")
    public DaoRequests getDaoRequest(WebServiceFeature... features) {
        return super.getPort(DaoRequest, DaoRequests.class, features);
    }

}
