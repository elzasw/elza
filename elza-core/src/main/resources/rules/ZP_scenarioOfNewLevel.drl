package ZP2015;


import java.util.Arrays;
import cz.tacr.elza.drools.model.VOLevel
import cz.tacr.elza.domain.vo.DataValidationResult
import cz.tacr.elza.drools.model.DescItemVO;
import cz.tacr.elza.domain.RulArrangementType;
import cz.tacr.elza.api.vo.RuleEvaluationType
import cz.tacr.elza.domain.vo.ScenarioOfNewLevel
import cz.tacr.elza.domain.ArrDescItem
import java.util.ArrayList
import java.util.List
import cz.tacr.elza.domain.ArrDescItemEnum
import cz.tacr.elza.drools.model.VOScenarioOfNewLevel;

global java.util.List results;

function boolean isRootLevel(VOLevel level){
    if (level == null) {
        return false;
    }
    return level.getParent() == null;
}

function boolean hasLevelTypeAndSpec(VOLevel level, String typeCode, String specCode){
    if(level == null || level.getDescItems() == null){
        return false;
    }

    for (DescItemVO descItem : level.getDescItems()) {
        if(typeCode.equals(descItem.getType()) && specCode.equals(descItem.getSpecCode())){
            return true;
        }
    }
    return false;
}

rule "Pokud rodič levelu je root level"
when
    level: VOLevel()
    eval(isRootLevel(level.getParent()))
then
    VOScenarioOfNewLevel scenario = new VOScenarioOfNewLevel();
    scenario.setName("Nejvyšší série");
    List<DescItemVO> descItemList = new ArrayList<>();
    DescItemVO descItemVO = new DescItemVO("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_SERIES");
    descItemList.add(descItemVO);
    scenario.setDescItems(descItemList);
    results.add(scenario);
end

rule "Pokud rodič levelu má atribut ZP2015_LEVEL_TYPE/ZP2015_LEVEL_ITEM"
when
    level: VOLevel()
    eval(hasLevelTypeAndSpec(level.getParent(), "ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_ITEM"))
then
    VOScenarioOfNewLevel scenario = new VOScenarioOfNewLevel();
    scenario.setName("Část jednotlivosti");
    List<DescItemVO> descItemList = new ArrayList<>();
    DescItemVO descItemVO = new DescItemVO("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_PART");
    descItemList.add(descItemVO);
    scenario.setDescItems(descItemList);
    results.add(scenario);
end

rule "Pokud rodič levelu má atribut ZP2015_LEVEL_TYPE/ZP2015_LEVEL_PART"
when
    level: VOLevel()
    eval(hasLevelTypeAndSpec(level.getParent(), "ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_PART"))
then
    VOScenarioOfNewLevel scenario = new VOScenarioOfNewLevel();
    scenario.setName("Část jednotlivosti");
    List<DescItemVO> descItemList = new ArrayList<>();
    DescItemVO descItemVO = new DescItemVO("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_PART");
    descItemList.add(descItemVO);
    scenario.setDescItems(descItemList);
    results.add(scenario);
end