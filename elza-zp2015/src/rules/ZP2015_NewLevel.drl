package ZP2015;

import cz.tacr.elza.drools.model.Level;
import cz.tacr.elza.drools.model.NewLevel;
import cz.tacr.elza.drools.model.DescItem;
import cz.tacr.elza.drools.model.NewLevelApproach;

global cz.tacr.elza.drools.model.NewLevelApproaches results;

/*
 * Implementační poznámky:
 * 
 * Nový uzel se pozná podle chybějícího nodeId nebo je typu NewLevel
 */

rule "Archivní soubor"
when
    NewLevel( parent==null )
then
	NewLevelApproach approach = results.create("Archivní soubor");
	approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_ROOT");
end

rule "Dílčí list"
when
	$level: NewLevel( parent!=null && $items: parent.descItems )
    DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_ROOT" ) from $items
then
	NewLevelApproach approach = results.create("Dílčí list");
	approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_SECTION");
end

rule "Série"
when
	$level: NewLevel( parent!=null && $items: parent.descItems )
    DescItem( type == "ZP2015_LEVEL_TYPE" && specCode in ("ZP2015_LEVEL_ROOT", "ZP2015_LEVEL_SECTION", "ZP2015_LEVEL_SERIES") ) from $items
	// Serii nelze pridat pokud pred existuje neco jineho nez serie
	//not ( NewLevel ( siblingBefore!=null && $itemsBefore: siblingBefore.descItems ) and
	//	DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_SERIES" ) from $itemsBefore )
	// Serii nelze pridat pokud za existuje neco jineho nez serie 
	//not ( NewLevel ( siblingAfter!=null && $itemsAfter: siblingAfter.descItems ) and
	//	DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_SERIES" ) from $itemsAfter ) 
then
	NewLevelApproach approach = results.create("Série");
	approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_SERIES");
end

rule "Logická složka"
when
	$level: NewLevel( parent!=null && $items: parent.descItems)
	DescItem( type == "ZP2015_LEVEL_TYPE" && ( specCode == "ZP2015_LEVEL_SERIES" || specCode == "ZP2015_LEVEL_FOLDER" ) ) from $items
	not DescItem( type == "ZP2015_FOLDER_TYPE" && specCode == "ZP2015_FOLDER_SINGLE_TYPE" ) from $items
	// Složku nelze přidat pokud je rodič složka a sourozenec před je jednotlivost
	not ( DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items and
		  NewLevel ( siblingBefore!=null && $itemsBefore: siblingBefore.descItems ) and
		  DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_FOLDER" ) from $itemsBefore )
	// Složku nelze přidat pokud je rodič složka a sourozenec za je jednotlivost
	not ( DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items and
		  NewLevel ( siblingAfter!=null && $itemsAfter: siblingAfter.descItems ) and
		  DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_FOLDER" ) from $itemsAfter )
	// Nesmi byt slozka manip seznamu s vice prvky popisu
	not ( DescItem( type == "ZP2015_EXTRA_UNITS" ) from $items )
then
	NewLevelApproach approach = results.create("Logická složka");
	approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_FOLDER");
	approach.addDescItem("ZP2015_FOLDER_TYPE", "ZP2015_FOLDER_LOGICAL");
end

rule "Složka s množstevní EJ"
when
	$level: NewLevel( parent!=null && $items: parent.descItems)
	DescItem( type == "ZP2015_LEVEL_TYPE" && ( specCode == "ZP2015_LEVEL_SERIES" || specCode == "ZP2015_LEVEL_FOLDER" ) ) from $items
	not ( Level( nodeId!=null, $items2: descItems) and
		DescItem( type == "ZP2015_FOLDER_TYPE" && specCode != "ZP2015_FOLDER_LOGICAL" ) from $items2 )
	// Složku nelze přidat pokud je rodič složka a sourozenec před je jednotlivost
	not ( DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items and
		  NewLevel ( siblingBefore!=null && $itemsBefore: siblingBefore.descItems ) and
		  DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_FOLDER" ) from $itemsBefore )
	// Složku nelze přidat pokud je rodič složka a sourozenec za je jednotlivost
	not ( DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items and
		  NewLevel ( siblingAfter!=null && $itemsAfter: siblingAfter.descItems ) and
		  DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_FOLDER" ) from $itemsAfter )
then
	NewLevelApproach approach = results.create("Složka s množstevní EJ");
    approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_FOLDER");
    approach.addDescItem("ZP2015_FOLDER_TYPE", "ZP2015_FOLDER_UNITS");
end

rule "Složka s uvedením typu EJ"
when
	$level: NewLevel( parent!=null && $items: parent.descItems)
	// Rodic je slozka nebo serie
	DescItem( type == "ZP2015_LEVEL_TYPE" && ( specCode == "ZP2015_LEVEL_SERIES" || specCode == "ZP2015_LEVEL_FOLDER" ) ) from $items
	// Nesmi existovat nadrazena slozka jineho typu nez logicka
	not ( Level( nodeId!=null && $items2: descItems) and
		DescItem( type == "ZP2015_FOLDER_TYPE" && specCode != "ZP2015_FOLDER_LOGICAL" ) from $items2 )
	// Složku nelze přidat pokud je rodič složka a sourozenec před je jednotlivost
	not ( DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items and
		  NewLevel ( siblingBefore!=null && $itemsBefore: siblingBefore.descItems ) and
		  DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_FOLDER" ) from $itemsBefore )
	// Složku nelze přidat pokud je rodič složka a sourozenec za je jednotlivost
	not ( DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items and
		  NewLevel ( siblingAfter!=null && $itemsAfter: siblingAfter.descItems ) and
		  DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_FOLDER" ) from $itemsAfter )
then
    NewLevelApproach approach = results.create("Složka s uvedením typu EJ");
    approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_FOLDER");
    approach.addDescItem("ZP2015_FOLDER_TYPE", "ZP2015_FOLDER_SINGLE_TYPE");
end

rule "Jednotlivost pod sérii"
when
	$level: NewLevel( parent!=null && $items: parent.descItems )
	DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_SERIES" ) from $items 
	// Jednotlivost nejde pridat pokud pred existuje serie
	// not ( NewLevel ( siblingBefore!=null && $itemsBefore: siblingBefore.descItems ) and
	//	DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_SERIES" ) from $itemsBefore )
	// Jednotlivost nejde pridat pokud za existuje serie 
	// not ( NewLevel ( siblingAfter!=null && $itemsAfter: siblingAfter.descItems ) and
	//	DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_SERIES" ) from $itemsAfter ) 
then
    NewLevelApproach approach = results.create("Jednotlivost");
    approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_ITEM");
end

rule "Jednotlivost pod složkou"
when
	$level: NewLevel( parent!=null && $items: parent.descItems )
	DescItem( type == "ZP2015_LEVEL_TYPE" && specCode == "ZP2015_LEVEL_FOLDER" ) from $items 
	// Jednotlivost nejde pridat pokud pred existuje složka (neco jineho) v dane urovni
	not ( NewLevel ( siblingBefore!=null && $itemsBefore: siblingBefore.descItems ) and
		DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_ITEM" ) from $itemsBefore )
	// Jednotlivost nejde pridat pokud za existuje složka (neco jineho) v dane urovni
	not ( NewLevel ( siblingAfter!=null && $itemsAfter: siblingAfter.descItems ) and
		DescItem( type == "ZP2015_LEVEL_TYPE" && specCode != "ZP2015_LEVEL_ITEM" ) from $itemsAfter ) 
	// Nesmi byt slozka manip seznamu s vice prvky popisu
	not ( DescItem( type == "ZP2015_EXTRA_UNITS" ) from $items )
then
    NewLevelApproach approach = results.create("Jednotlivost");
    approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_ITEM");
end

rule "Část jednotlivosti"
when
	$level: NewLevel( parent!=null && $items: parent.descItems)
	DescItem( type == "ZP2015_LEVEL_TYPE" && ( specCode == "ZP2015_LEVEL_ITEM" || specCode == "ZP2015_LEVEL_PART" ) ) from $items
then
    NewLevelApproach approach = results.create("Část jednotlivosti");
    approach.addDescItem("ZP2015_LEVEL_TYPE", "ZP2015_LEVEL_PART");
end
